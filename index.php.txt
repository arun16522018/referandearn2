<?php
// ==============================================
// Telegram Bot Configuration
// ==============================================
define('BOT_TOKEN', getenv('TELEGRAM_BOT_TOKEN') ?: 'YOUR_BOT_TOKEN_HERE');
define('API_URL', 'https://api.telegram.org/bot' . BOT_TOKEN . '/');
define('USERS_FILE', _DIR_ . '/data/users.json');
define('ERROR_LOG', _DIR_ . '/logs/error.log');
define('WEBHOOK_URL', 'https://yourdomain.com/bot.php'); // Change this to your actual URL

// Ensure directories exist
@mkdir(_DIR_ . '/data', 0755, true);
@mkdir(_DIR_ . '/logs', 0755, true);

// ==============================================
// Core Bot Functions
// ==============================================

/**
 * Set up the webhook with Telegram
 */
function setWebhook() {
    try {
        $url = API_URL . 'setWebhook?url=' . urlencode(WEBHOOK_URL);
        $response = file_get_contents($url);
        $data = json_decode($response, true);
        
        if ($data['ok'] === true) {
            logMessage("✅ Webhook successfully set to: " . WEBHOOK_URL);
            return true;
        } else {
            logError("❌ Webhook setup failed: " . $data['description']);
            return false;
        }
    } catch (Exception $e) {
        logError("Webhook setup exception: " . $e->getMessage());
        return false;
    }
}

/**
 * Remove the webhook
 */
function clearWebhook() {
    try {
        $url = API_URL . 'deleteWebhook';
        $response = file_get_contents($url);
        $data = json_decode($response, true);
        
        if ($data['ok'] === true) {
            logMessage("ℹ Webhook successfully removed");
            return true;
        } else {
            logError("❌ Webhook removal failed: " . $data['description']);
            return false;
        }
    } catch (Exception $e) {
        logError("Webhook removal exception: " . $e->getMessage());
        return false;
    }
}

/**
 * Process incoming updates
 */
function processUpdate($update) {
    try {
        $message = $update['message'] ?? $update['edited_message'] ?? null;
        
        if ($message) {
            $chatId = $message['chat']['id'];
            $text = $message['text'] ?? '';
            
            // Simple echo bot
            if ($text === '/start') {
                sendMessage($chatId, "👋 Hello! I'm your Telegram bot.");
            } else {
                sendMessage($chatId, "You said: " . $text);
            }
        }
    } catch (Exception $e) {
        logError("Update processing error: " . $e->getMessage());
    }
}

/**
 * Send message to user
 */
function sendMessage($chatId, $text) {
    $url = API_URL . 'sendMessage?chat_id=' . $chatId . '&text=' . urlencode($text);
    file_get_contents($url);
}

// ==============================================
// Helper Functions
// ==============================================

function logMessage($message) {
    file_put_contents(ERROR_LOG, date('[Y-m-d H:i:s] ') . $message . PHP_EOL, FILE_APPEND);
}

function logError($message) {
    file_put_contents(ERROR_LOG, date('[Y-m-d H:i:s] ERROR: ') . $message . PHP_EOL, FILE_APPEND);
}

// ==============================================
// Main Execution
// ==============================================

// Handle webhook request
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $update = json_decode(file_get_contents('php://input'), true);
    processUpdate($update);
    exit;
}

// CLI commands for webhook management
if (php_sapi_name() === 'cli') {
    $command = $argv[1] ?? null;
    
    switch ($command) {
        case 'set-webhook':
            echo setWebhook() ? "Webhook set successfully\n" : "Failed to set webhook\n";
            break;
            
        case 'remove-webhook':
            echo clearWebhook() ? "Webhook removed successfully\n" : "Failed to remove webhook\n";
            break;
            
        case 'info':
            $url = API_URL . 'getWebhookInfo';
            $response = file_get_contents($url);
            echo $response . "\n";
            break;
            
        default:
            echo "Available commands:\n";
            echo "  set-webhook    - Register webhook URL\n";
            echo "  remove-webhook - Remove webhook\n";
            echo "  info           - Show webhook info\n";
            break;
    }
    exit;
}

// Default response for browser access
echo "Telegram Bot is running. Last update: " . date('Y-m-d H:i:s');
